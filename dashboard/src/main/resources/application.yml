server:
  port: 8084

spring:
  application:
    name: dashboard
---

spring:
  profiles: default
  jpa:
    properties:
      hibernate:
        ddl-auto: update
        show_sql: true
        format_sql: true
        implicit_naming_strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl
  datasource:
    # url: jdbc:mysql://${_DATASOURCE_ADDRESS:35.221.110.118:3306}/${_DATASOURCE_TABLESPACE:my-database}
    # username: ${_DATASOURCE_USERNAME:root1}
    # password: ${_DATASOURCE_PASSWORD:secretpassword}
    # driverClassName: com.mysql.cj.jdbc.Driver
  cloud:
    stream:
      kafka:
        binder:
          brokers: localhost:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: dashboard
#<<< EDA / Topic Name
          destination: sabc
#>>> EDA / Topic Name
          contentType: application/json
        event-out:
#<<< EDA / Topic Name
          destination: sabc
#>>> EDA / Topic Name
          contentType: application/json

logging:
  level:
    org.hibernate.type: trace
    org.springframework.cloud: debug


server:
  port: 8084

---

spring:
  profiles: docker
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        implicit_naming_strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl
  datasource:
    url: jdbc:mysql://${_DATASOURCE_ADDRESS:35.221.110.118:3306}/${_DATASOURCE_TABLESPACE:my-database}
    username: ${_DATASOURCE_USERNAME:root1}
    password: ${_DATASOURCE_PASSWORD:secretpassword}
    driverClassName: com.mysql.cj.jdbc.Driver
  cloud:
    stream:
      kafka:
        binder:
          brokers: my-kafka:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: dashboard
          destination: sabc
          contentType: application/json
        event-out:
          destination: sabc
          contentType: application/json


